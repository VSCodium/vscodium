diff --git a/build/gulpfile.reh.js b/build/gulpfile.reh.js
index e314794..8248247 100644
--- a/build/gulpfile.reh.js
+++ b/build/gulpfile.reh.js
@@ -437,16 +437,2 @@ function packageTask(type, platform, arch, sourceFolderName, destinationFolderNa
 
-		if (platform === 'linux' && process.env['VSCODE_NODE_GLIBC'] === '-glibc-2.17') {
-			result = es.merge(result,
-				gulp.src(`resources/server/bin/helpers/check-requirements-linux-legacy.sh`, { base: '.' })
-					.pipe(rename(`bin/helpers/check-requirements.sh`))
-					.pipe(util.setExecutableBit())
-			);
-		} else if (platform === 'linux' || platform === 'alpine') {
-			result = es.merge(result,
-				gulp.src(`resources/server/bin/helpers/check-requirements-linux.sh`, { base: '.' })
-					.pipe(rename(`bin/helpers/check-requirements.sh`))
-					.pipe(util.setExecutableBit())
-			);
-		}
-
 		result = inlineMeta(result, {
diff --git a/remote/package-lock.json b/remote/package-lock.json
index 5872575..a559230 100644
--- a/remote/package-lock.json
+++ b/remote/package-lock.json
@@ -37,3 +37,3 @@
         "native-watchdog": "^1.4.1",
-        "node-pty": "1.1.0-beta21",
+        "node-pty": "1.1.0-beta4",
         "tas-client-umd": "0.2.0",
@@ -712,2 +712,8 @@
     },
+    "node_modules/nan": {
+      "version": "2.20.0",
+      "resolved": "https://registry.npmjs.org/nan/-/nan-2.20.0.tgz",
+      "integrity": "sha512-bk3gXBZDGILuuo/6sKtr0DQmSThYHLtNCdSdXk9YkxD/jK6X2vmCyyXBBxyqZ4XcnzTyYEAThfX3DCEnLf6igw==",
+      "license": "MIT"
+    },
     "node_modules/napi-build-utils": {
@@ -750,16 +756,9 @@
     "node_modules/node-pty": {
-      "version": "1.1.0-beta21",
-      "resolved": "https://registry.npmjs.org/node-pty/-/node-pty-1.1.0-beta21.tgz",
-      "integrity": "sha512-FYpnY9g8qMQLTpqyeY9NVli6YfCWwvG6v6gmaDBbPjlc1VMp/+Zivq0SStDrRr1aciGnFCZzpL0BzdMnmbDnAw==",
+      "version": "1.1.0-beta4",
+      "resolved": "https://registry.npmjs.org/node-pty/-/node-pty-1.1.0-beta4.tgz",
+      "integrity": "sha512-CgffN9AxVtH4g7vDxtanm2qaR7jw3oet9r+ArzziGiFvmds9SdR3gXkZF0fqZWSxhTHZusJWvsuKvRv+5O2K8A==",
       "hasInstallScript": true,
+      "license": "MIT",
       "dependencies": {
-        "node-addon-api": "^7.1.0"
-      }
-    },
-    "node_modules/node-pty/node_modules/node-addon-api": {
-      "version": "7.1.0",
-      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.0.tgz",
-      "integrity": "sha512-mNcltoe1R8o7STTegSOHdnJNN7s5EUvhoS7ShnTHDyOSd+8H+UdWODq6qSv67PjC8Zc5JRT8+oLAMCr0SIXw7g==",
-      "engines": {
-        "node": "^16 || ^18 || >= 20"
+        "nan": "^2.17.0"
       }
diff --git a/remote/package.json b/remote/package.json
index c107b04..112501b 100644
--- a/remote/package.json
+++ b/remote/package.json
@@ -32,3 +32,3 @@
     "native-watchdog": "^1.4.1",
-    "node-pty": "1.1.0-beta21",
+    "node-pty": "1.1.0-beta4",
     "tas-client-umd": "0.2.0",
diff --git a/src/bootstrap-amd.js b/src/bootstrap-amd.js
index 9c8daf5..0867d3a 100644
--- a/src/bootstrap-amd.js
+++ b/src/bootstrap-amd.js
@@ -17,3 +17,3 @@ import * as fs from 'fs';
 import { fileURLToPath } from 'url';
-import { createRequire, register } from 'node:module';
+import { createRequire } from 'node:module';
 import { product, pkg } from './bootstrap-meta.js';
@@ -27,21 +27,2 @@ const module = { exports: {} };
 const __dirname = path.dirname(fileURLToPath(import.meta.url));
-
-// Install a hook to module resolution to map 'fs' to 'original-fs'
-if (process.env['ELECTRON_RUN_AS_NODE'] || process.versions['electron']) {
-	const jsCode = `
-	export async function resolve(specifier, context, nextResolve) {
-		if (specifier === 'fs') {
-			return {
-				format: 'builtin',
-				shortCircuit: true,
-				url: 'node:original-fs'
-			};
-		}
-
-		// Defer to the next hook in the chain, which would be the
-		// Node.js default resolve if this is the last user-specified loader.
-		return nextResolve(specifier, context);
-	}`;
-	register(`data:text/javascript;base64,${Buffer.from(jsCode).toString('base64')}`, import.meta.url);
-}
 // ESM-uncomment-end
