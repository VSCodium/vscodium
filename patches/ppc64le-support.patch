diff --git a/build/gulpfile.reh.js b/build/gulpfile.reh.js
index c2b81d0..4972cec 100644
--- a/build/gulpfile.reh.js
+++ b/build/gulpfile.reh.js
@@ -46,2 +46,3 @@ const BUILD_TARGETS = [
 	{ platform: 'linux', arch: 'arm64' },
+	{ platform: 'linux', arch: 'ppc64le' },
 	{ platform: 'alpine', arch: 'arm64' },
diff --git a/build/gulpfile.scan.js b/build/gulpfile.scan.js
index 6f8144b..4479ae7 100644
--- a/build/gulpfile.scan.js
+++ b/build/gulpfile.scan.js
@@ -26,2 +26,3 @@ const BUILD_TARGETS = [
 	{ platform: 'linux', arch: 'arm64' },
+	{ platform: 'linux', arch: 'ppc64le' },
 ];
diff --git a/build/gulpfile.vscode.js b/build/gulpfile.vscode.js
index e1507e0..997b553 100644
--- a/build/gulpfile.vscode.js
+++ b/build/gulpfile.vscode.js
@@ -431,2 +431,3 @@ const BUILD_TARGETS = [
 	{ platform: 'linux', arch: 'arm64' },
+	{ platform: 'linux', arch: 'ppc64le' },
 ];
diff --git a/build/gulpfile.vscode.linux.js b/build/gulpfile.vscode.linux.js
index 8c2b62f..290f25e 100644
--- a/build/gulpfile.vscode.linux.js
+++ b/build/gulpfile.vscode.linux.js
@@ -30,3 +30,3 @@ const linuxPackageRevision = Math.floor(new Date().getTime() / 1000);
 function getDebPackageArch(arch) {
-	return { x64: 'amd64', armhf: 'armhf', arm64: 'arm64' }[arch];
+	return { x64: 'amd64', armhf: 'armhf', arm64: 'arm64', ppc64le: 'ppc64le' }[arch];
 }
@@ -136,3 +136,3 @@ function getRpmBuildPath(rpmArch) {
 function getRpmPackageArch(arch) {
-	return { x64: 'x86_64', armhf: 'armv7hl', arm64: 'aarch64' }[arch];
+	return { x64: 'x86_64', armhf: 'armv7hl', arm64: 'aarch64', ppc64le: 'ppc64le' }[arch];
 }
@@ -297,2 +297,3 @@ const BUILD_TARGETS = [
 	{ arch: 'arm64' },
+	{ arch: 'ppc64le' },
 ];
diff --git a/build/linux/debian/calculate-deps.ts b/build/linux/debian/calculate-deps.ts
index 92f8065..c16687b 100644
--- a/build/linux/debian/calculate-deps.ts
+++ b/build/linux/debian/calculate-deps.ts
@@ -61,2 +61,8 @@ function calculatePackageDeps(binaryPath: string, arch: DebianArchString, chromi
 			break;
+		case 'ppc64le':
+			cmd.push(`-l${chromiumSysroot}/usr/lib/ppc64le-linux-gnu`,
+				`-l${chromiumSysroot}/lib/ppc64le-linux-gnu`,
+				`-l${vscodeSysroot}/usr/lib/ppc64le-linux-gnu`,
+				`-l${vscodeSysroot}/lib/ppc64le-linux-gnu`);
+			break;
 	}
diff --git a/build/linux/debian/dep-lists.ts b/build/linux/debian/dep-lists.ts
index 3d6c2eb..a4587bd 100644
--- a/build/linux/debian/dep-lists.ts
+++ b/build/linux/debian/dep-lists.ts
@@ -142,2 +142,41 @@ export const referenceGeneratedDepsByArch = {
 		'xdg-utils (>= 1.0.2)'
+	],
+	'ppc64le': [
+		'ca-certificates',
+		'libasound2 (>= 1.0.17)',
+		'libatk-bridge2.0-0 (>= 2.5.3)',
+		'libatk1.0-0 (>= 2.2.0)',
+		'libatspi2.0-0 (>= 2.9.90)',
+		'libc6 (>= 2.17)',
+		'libc6 (>= 2.28)',
+		'libcairo2 (>= 1.6.0)',
+		'libcurl3-gnutls | libcurl3-nss | libcurl4 | libcurl3',
+		'libdbus-1-3 (>= 1.0.2)',
+		'libdrm2 (>= 2.4.60)',
+		'libexpat1 (>= 2.0.1)',
+		'libgbm1 (>= 17.1.0~rc2)',
+		'libglib2.0-0 (>= 2.16.0)',
+		'libglib2.0-0 (>= 2.39.4)',
+		'libgtk-3-0 (>= 3.9.10)',
+		'libgtk-3-0 (>= 3.9.10) | libgtk-4-1',
+		'libnspr4 (>= 2:4.9-2~)',
+		'libnss3 (>= 2:3.22)',
+		'libnss3 (>= 3.26)',
+		'libpango-1.0-0 (>= 1.14.0)',
+		'libsecret-1-0 (>= 0.18)',
+		'libstdc++6 (>= 4.1.1)',
+		'libstdc++6 (>= 5)',
+		'libstdc++6 (>= 5.2)',
+		'libstdc++6 (>= 6)',
+		'libx11-6',
+		'libx11-6 (>= 2:1.4.99.1)',
+		'libxcb1 (>= 1.9.2)',
+		'libxcomposite1 (>= 1:0.4.4-1)',
+		'libxdamage1 (>= 1:1.1)',
+		'libxext6',
+		'libxfixes3',
+		'libxkbcommon0 (>= 0.4.1)',
+		'libxkbfile1',
+		'libxrandr2',
+		'xdg-utils (>= 1.0.2)'
 	]
diff --git a/build/linux/debian/types.ts b/build/linux/debian/types.ts
index e97485e..356027a 100644
--- a/build/linux/debian/types.ts
+++ b/build/linux/debian/types.ts
@@ -5,6 +5,6 @@
 
-export type DebianArchString = 'amd64' | 'armhf' | 'arm64';
+export type DebianArchString = 'amd64' | 'armhf' | 'arm64' | 'ppc64le';
 
 export function isDebianArchString(s: string): s is DebianArchString {
-	return ['amd64', 'armhf', 'arm64'].includes(s);
+	return ['amd64', 'armhf', 'arm64', 'ppc64le'].includes(s);
 }
diff --git a/cli/src/update_service.rs b/cli/src/update_service.rs
index 4bec13d..5aa944d 100644
--- a/cli/src/update_service.rs
+++ b/cli/src/update_service.rs
@@ -216,2 +216,3 @@ pub enum Platform {
 	LinuxARM32Legacy,
+	LinuxPPC64LE
 	DarwinX64,
@@ -229,2 +230,3 @@ impl Platform {
 			Platform::LinuxARM32 => Some("linux-armhf".to_owned()),
+			Platform::LinuxPPC64LE => Some("linux-ppc64le".to_owned()),
 			Platform::DarwinX64 => Some("darwin".to_owned()),
@@ -247,2 +249,3 @@ impl Platform {
 			Platform::LinuxARM32Legacy => "server-linux-legacy-armhf",
+			Platform::LinuxPPC64LE => "server-linux-ppc64le",
 			Platform::DarwinX64 => "server-darwin",
@@ -266,2 +269,3 @@ impl Platform {
 			Platform::LinuxARM32Legacy => "cli-linux-armhf",
+			Platform::LinuxPPC64LE => "cli-linux-ppc64le",
 			Platform::DarwinX64 => "cli-darwin-x64",
@@ -298,2 +302,4 @@ impl Platform {
 			Some(Platform::LinuxARM64)
+		} else if cfg!(all(target_os = "linux", target_arch = "ppc64le")) {
+			Some(Platform::LinuxPPC64LE)
 		} else if cfg!(all(target_os = "macos", target_arch = "x86_64")) {
@@ -325,2 +331,3 @@ impl fmt::Display for Platform {
 			Platform::LinuxARM32Legacy => "LinuxARM32Legacy",
+			Platform::LinuxPPC64LE => "LinuxPPC64LE",
 			Platform::DarwinX64 => "DarwinX64",
diff --git a/cli/src/util/prereqs.rs b/cli/src/util/prereqs.rs
index 20a5bc9..1669bf7 100644
--- a/cli/src/util/prereqs.rs
+++ b/cli/src/util/prereqs.rs
@@ -75,2 +75,4 @@ impl PreReqChecker {
 					Platform::LinuxARM32
+				} else if cfg!(target_arch = "ppc64le") {
+					Platform::LinuxPPC64LE
 				} else {
diff --git a/src/main.js b/src/main.js
index 90de17b..80f5c47 100644
--- a/src/main.js
+++ b/src/main.js
@@ -435,2 +435,3 @@ function configureCrashReporter() {
 				} else if (isLinux) {
+
 					submitURL = appCenter['linux-x64'];
diff --git a/src/vs/platform/extensionManagement/common/extensionManagement.ts b/src/vs/platform/extensionManagement/common/extensionManagement.ts
index 9dae82e..64ad08b 100644
--- a/src/vs/platform/extensionManagement/common/extensionManagement.ts
+++ b/src/vs/platform/extensionManagement/common/extensionManagement.ts
@@ -35,2 +35,3 @@ export function TargetPlatformToString(targetPlatform: TargetPlatform) {
 		case TargetPlatform.LINUX_ARMHF: return 'Linux ARM';
+		case TargetPlatform.LINUX_PPC64LE: return 'Linux PPC64LE';
 
@@ -58,2 +59,3 @@ export function toTargetPlatform(targetPlatform: string): TargetPlatform {
 		case TargetPlatform.LINUX_ARMHF: return TargetPlatform.LINUX_ARMHF;
+		case TargetPlatform.LINUX_PPC64LE: return TargetPlatform.LINUX_PPC64LE;
 
@@ -93,2 +95,5 @@ export function getTargetPlatform(platform: Platform | 'alpine', arch: string |
 			}
+			if (arch === 'ppc64le') {
+				return TargetPlatform.LINUX_PPC64LE;
+			}
 			return TargetPlatform.UNKNOWN;
diff --git a/src/vs/platform/extensions/common/extensions.ts b/src/vs/platform/extensions/common/extensions.ts
index 331aba1..57e01f2 100644
--- a/src/vs/platform/extensions/common/extensions.ts
+++ b/src/vs/platform/extensions/common/extensions.ts
@@ -305,2 +305,3 @@ export const enum TargetPlatform {
 	LINUX_ARMHF = 'linux-armhf',
+	LINUX_PPC64LE = 'linux-ppc64le',
 
